---
import "../styles/global.css";
import Parser from "rss-parser";
import FeedItem from "../components/FeedItem.astro";
import ClockIcon from "../components/icons/ClockIcon.astro";
import CodeFileIcon from "../components/icons/CodeFileIcon.astro";
import DocumentIcon from "../components/icons/DocumentIcon.astro";
import { GET } from "./feed.xml";

const RECENT_FEED_CUTOFF_TIME = import.meta.env.RECENT_FEED_CUTOFF_TIME
	? Number.parseInt(import.meta.env.RECENT_FEED_CUTOFF_TIME)
	: 6 * 60 * 60 * 1000;

const basePath = import.meta.env.BASE_URL satisfies string | undefined;

async function getAllFeedItems() {
	const response = await GET(Astro);
	return new Parser().parseString(await response.text());
}

const feed = await getAllFeedItems();
const updateTime = new Date();
const cutoffTime = new Date(updateTime.getTime() - RECENT_FEED_CUTOFF_TIME);
const items = feed.items
	.filter((item) => item.pubDate && new Date(item.pubDate) > cutoffTime)
	.sort(
		(a, b) =>
			new Date(b.pubDate ?? b.isoDate ?? b.updated).getTime() -
			new Date(a.pubDate ?? a.isoDate ?? a.updated).getTime(),
	);
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<meta http-equiv="X-UA-Compatible" content="ie=edge" />
		<title>Carter's RSS Feeds</title>
		<link
			rel="icon"
			href={`${basePath}/news-emoji.svg`}
			sizes="any"
			type="image/svg+xml"
		/>
		<link rel="manifest" href={`${basePath}/manifest.json`} />
		<script>
			import "@github/relative-time-element";
		</script>
	</head>
	<body class="max-w-prose mx-auto py-2 px-2 md:px-0 bg-bg text-tx">
		<header class="flex flex-row gap-4">
			<h1 class="grow">Carter's RSS Feeds</h1>
			<div class="flex flex-row gap-1 items-start">
				<ClockIcon class="mt-1" />
				<relative-time datetime={updateTime}></relative-time>
			</div>
			<div class="flex flex-row gap-1 items-start">
				<DocumentIcon class="mt-1" />
				<p>
					{items.length}<span class="hidden md:inline">&nbsp;items</span>
				</p>
			</div>
			<a
				href="https://github.com/carterworks/rss-reader"
				class="pointer flex flex-row gap-1 items-start"
				title="View the source code on GitHub"
			>
				<CodeFileIcon class="mt-1" />
				<span class="hidden md:inline">GitHub</span>
			</a>
		</header>
		<main>
			<ul class="space-y-2">
				{items.map((item) => <FeedItem item={item} as="li" />)}
				<li class="italic flex flex-row gap-2 items-center not-first:mt-2">
					<hr class="grow-1 border-tx" />
					<p class="text-center">
						Thus ends the feed. At least for the past
						<relative-time datetime={cutoffTime} format="duration"
						></relative-time>.
					</p>
					<hr class="grow-1 border-tx" />
				</li>
			</ul>
		</main>
	</body>
</html>
