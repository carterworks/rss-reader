---
import { base } from "astro:config/client";
import { decodeHTML } from "entities";
import type Parser from "rss-parser";
import ArchiveIcon from "./icons/ArchiveIcon.astro";
import LinkIcon from "./icons/LinkIcon.astro";

interface Props {
	item: Parser.Item;
	as?: "li" | "div";
	class?: string;
}

const {
	item,
	as: Element = "div",
	class: additionalClasses = "",
	...props
} = Astro.props satisfies Props;

function decodeHtmlEntities(text: string): string {
	return decodeHTML(text);
}

const yazzyUrl = import.meta.env.YAZZY_URL satisfies string | undefined;
const hostname = item.link ? new URL(item.link).hostname : undefined;
const faviconPath = hostname ? `${base}/icon/${hostname}.ico` : undefined;
const hasFavicon = faviconPath
	? await fetch(new URL(faviconPath, Astro.url)).then((r) => r.ok)
	: false;

// Decode the title
const decodedTitle = item.title ? decodeHtmlEntities(item.title) : undefined;
---

<Element class={`group relative ${additionalClasses}`} {...props}>
	<div
		class="relative bg-bg/60 backdrop-blur-sm border border-ui-2 rounded-lg p-3 hover:bg-bg/80 hover:border-ui-3 transition-all duration-300"
	>
		<div
			class="absolute top-0 left-0 right-0 h-0.5 bg-gradient-to-r from-bl via-pu to-cy rounded-t-lg opacity-60"
		>
		</div>

		<div class="flex gap-3">
			<div class="flex-shrink-0 mt-0.5">
				{
					hasFavicon ? (
						<div class="relative">
							<div class="absolute inset-0 bg-gradient-to-br from-bl/20 to-pu/20 rounded blur-sm" />
							<img
								src={faviconPath}
								alt={`Favicon for ${item.link}`}
								class="relative w-4 h-4 transition-all duration-300 grayscale dark:invert group-hover:grayscale-0 group-hover:invert-0 rounded-sm"
								loading="lazy"
							/>
						</div>
					) : (
						<div class="p-0.5 bg-gradient-to-br from-ui-2 to-ui-3 rounded border border-ui-3">
							<LinkIcon title="No favicon" class="w-3 h-3 text-tx-2" />
						</div>
					)
				}
			</div>
			<div class="flex-1 min-w-0">
				<a
					href={item.link}
					class="block group-hover:text-bl transition-colors duration-200"
				>
					<h2
						class="text-base font-semibold leading-tight mb-1 group-hover:text-bl transition-colors duration-200"
					>
						{
							decodedTitle ??
								`A post from ${item.creator ?? hostname ?? "somewhere"}`
						}
					</h2>
					{
						item.contentSnippet && (
							<p class="text-tx text-xs leading-relaxed mb-2 line-clamp-2">
								{item.contentSnippet}
							</p>
						)
					}
					<div class="flex items-center gap-1.5 text-xs text-tx-2">
						{
							Boolean(item.creator) && (
								<>
									<span class="font-medium text-pu">{item.creator}</span>
									<span class="text-ui-3">•</span>
								</>
							)
						}
						{
							Boolean(hostname) && (
								<>
									<span class="font-medium text-tx">{hostname}</span>
									<span class="text-ui-3">•</span>
								</>
							)
						}
						<relative-time
							datetime={new Date(
								item.pubDate ?? item.isoDate ?? "",
							).toISOString()}
							class="text-tx-2"></relative-time>
					</div>
				</a>
			</div>

			<div class="flex items-start gap-1">
				<a
					href={`https://archive.is/${item.link}`}
					aria-label="Open in archive.is"
					class="p-1 bg-bg-2 hover:bg-ui-2 rounded border border-ui-2 hover:border-ui-3 transition-all duration-200"
					title="Archive this article"
				>
					<ArchiveIcon class="w-3 h-3 text-tx-2 hover:text-tx" />
				</a>
				{
					yazzyUrl && (
						<a
							href={`${yazzyUrl}/${item.link}`}
							aria-label="Open in Yazzy"
							class="p-1 bg-bg-2 hover:bg-ui-2 rounded border border-ui-2 hover:border-ui-3 transition-all duration-200"
							title="Open in Yazzy"
						>
							<LinkIcon class="w-3 h-3 text-tx-2 hover:text-tx" />
						</a>
					)
				}
			</div>
		</div>
	</div>
</Element>
